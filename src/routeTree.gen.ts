/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as HomeRouteRouteImport } from './routes/home/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingIndexRouteImport } from './routes/onboarding/index'
import { Route as HomeIndexRouteImport } from './routes/home/index'
import { Route as OnboardingResultsRouteImport } from './routes/onboarding/results'
import { Route as OnboardingQuestionsRouteImport } from './routes/onboarding/questions'
import { Route as OnboardingFinishRouteImport } from './routes/onboarding/finish'
import { Route as HomeTimerRouteImport } from './routes/home/timer'
import { Route as HomeObjetivesRouteImport } from './routes/home/objetives'
import { Route as HomeMotivationRouteImport } from './routes/home/motivation'
import { Route as HomeLearningRouteImport } from './routes/home/learning'
import { Route as HomeHabitsRouteImport } from './routes/home/habits'
import { Route as HomeGoalsRouteImport } from './routes/home/goals'
import { Route as HomeClassroomRouteImport } from './routes/home/classroom'
import { Route as HomeCalendarRouteImport } from './routes/home/calendar'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRouteRoute = HomeRouteRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingIndexRoute = OnboardingIndexRouteImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRouteRoute,
} as any)
const OnboardingResultsRoute = OnboardingResultsRouteImport.update({
  id: '/onboarding/results',
  path: '/onboarding/results',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingQuestionsRoute = OnboardingQuestionsRouteImport.update({
  id: '/onboarding/questions',
  path: '/onboarding/questions',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingFinishRoute = OnboardingFinishRouteImport.update({
  id: '/onboarding/finish',
  path: '/onboarding/finish',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeTimerRoute = HomeTimerRouteImport.update({
  id: '/timer',
  path: '/timer',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeObjetivesRoute = HomeObjetivesRouteImport.update({
  id: '/objetives',
  path: '/objetives',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeMotivationRoute = HomeMotivationRouteImport.update({
  id: '/motivation',
  path: '/motivation',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeLearningRoute = HomeLearningRouteImport.update({
  id: '/learning',
  path: '/learning',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeHabitsRoute = HomeHabitsRouteImport.update({
  id: '/habits',
  path: '/habits',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeGoalsRoute = HomeGoalsRouteImport.update({
  id: '/goals',
  path: '/goals',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeClassroomRoute = HomeClassroomRouteImport.update({
  id: '/classroom',
  path: '/classroom',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeCalendarRoute = HomeCalendarRouteImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => HomeRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home': typeof HomeRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/home/calendar': typeof HomeCalendarRoute
  '/home/classroom': typeof HomeClassroomRoute
  '/home/goals': typeof HomeGoalsRoute
  '/home/habits': typeof HomeHabitsRoute
  '/home/learning': typeof HomeLearningRoute
  '/home/motivation': typeof HomeMotivationRoute
  '/home/objetives': typeof HomeObjetivesRoute
  '/home/timer': typeof HomeTimerRoute
  '/onboarding/finish': typeof OnboardingFinishRoute
  '/onboarding/questions': typeof OnboardingQuestionsRoute
  '/onboarding/results': typeof OnboardingResultsRoute
  '/home/': typeof HomeIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/home/calendar': typeof HomeCalendarRoute
  '/home/classroom': typeof HomeClassroomRoute
  '/home/goals': typeof HomeGoalsRoute
  '/home/habits': typeof HomeHabitsRoute
  '/home/learning': typeof HomeLearningRoute
  '/home/motivation': typeof HomeMotivationRoute
  '/home/objetives': typeof HomeObjetivesRoute
  '/home/timer': typeof HomeTimerRoute
  '/onboarding/finish': typeof OnboardingFinishRoute
  '/onboarding/questions': typeof OnboardingQuestionsRoute
  '/onboarding/results': typeof OnboardingResultsRoute
  '/home': typeof HomeIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/home': typeof HomeRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/home/calendar': typeof HomeCalendarRoute
  '/home/classroom': typeof HomeClassroomRoute
  '/home/goals': typeof HomeGoalsRoute
  '/home/habits': typeof HomeHabitsRoute
  '/home/learning': typeof HomeLearningRoute
  '/home/motivation': typeof HomeMotivationRoute
  '/home/objetives': typeof HomeObjetivesRoute
  '/home/timer': typeof HomeTimerRoute
  '/onboarding/finish': typeof OnboardingFinishRoute
  '/onboarding/questions': typeof OnboardingQuestionsRoute
  '/onboarding/results': typeof OnboardingResultsRoute
  '/home/': typeof HomeIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home'
    | '/login'
    | '/signup'
    | '/home/calendar'
    | '/home/classroom'
    | '/home/goals'
    | '/home/habits'
    | '/home/learning'
    | '/home/motivation'
    | '/home/objetives'
    | '/home/timer'
    | '/onboarding/finish'
    | '/onboarding/questions'
    | '/onboarding/results'
    | '/home/'
    | '/onboarding'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/home/calendar'
    | '/home/classroom'
    | '/home/goals'
    | '/home/habits'
    | '/home/learning'
    | '/home/motivation'
    | '/home/objetives'
    | '/home/timer'
    | '/onboarding/finish'
    | '/onboarding/questions'
    | '/onboarding/results'
    | '/home'
    | '/onboarding'
  id:
    | '__root__'
    | '/'
    | '/home'
    | '/login'
    | '/signup'
    | '/home/calendar'
    | '/home/classroom'
    | '/home/goals'
    | '/home/habits'
    | '/home/learning'
    | '/home/motivation'
    | '/home/objetives'
    | '/home/timer'
    | '/onboarding/finish'
    | '/onboarding/questions'
    | '/onboarding/results'
    | '/home/'
    | '/onboarding/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomeRouteRoute: typeof HomeRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  OnboardingFinishRoute: typeof OnboardingFinishRoute
  OnboardingQuestionsRoute: typeof OnboardingQuestionsRoute
  OnboardingResultsRoute: typeof OnboardingResultsRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/onboarding/results': {
      id: '/onboarding/results'
      path: '/onboarding/results'
      fullPath: '/onboarding/results'
      preLoaderRoute: typeof OnboardingResultsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/questions': {
      id: '/onboarding/questions'
      path: '/onboarding/questions'
      fullPath: '/onboarding/questions'
      preLoaderRoute: typeof OnboardingQuestionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/finish': {
      id: '/onboarding/finish'
      path: '/onboarding/finish'
      fullPath: '/onboarding/finish'
      preLoaderRoute: typeof OnboardingFinishRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/timer': {
      id: '/home/timer'
      path: '/timer'
      fullPath: '/home/timer'
      preLoaderRoute: typeof HomeTimerRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/home/objetives': {
      id: '/home/objetives'
      path: '/objetives'
      fullPath: '/home/objetives'
      preLoaderRoute: typeof HomeObjetivesRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/home/motivation': {
      id: '/home/motivation'
      path: '/motivation'
      fullPath: '/home/motivation'
      preLoaderRoute: typeof HomeMotivationRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/home/learning': {
      id: '/home/learning'
      path: '/learning'
      fullPath: '/home/learning'
      preLoaderRoute: typeof HomeLearningRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/home/habits': {
      id: '/home/habits'
      path: '/habits'
      fullPath: '/home/habits'
      preLoaderRoute: typeof HomeHabitsRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/home/goals': {
      id: '/home/goals'
      path: '/goals'
      fullPath: '/home/goals'
      preLoaderRoute: typeof HomeGoalsRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/home/classroom': {
      id: '/home/classroom'
      path: '/classroom'
      fullPath: '/home/classroom'
      preLoaderRoute: typeof HomeClassroomRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/home/calendar': {
      id: '/home/calendar'
      path: '/calendar'
      fullPath: '/home/calendar'
      preLoaderRoute: typeof HomeCalendarRouteImport
      parentRoute: typeof HomeRouteRoute
    }
  }
}

interface HomeRouteRouteChildren {
  HomeCalendarRoute: typeof HomeCalendarRoute
  HomeClassroomRoute: typeof HomeClassroomRoute
  HomeGoalsRoute: typeof HomeGoalsRoute
  HomeHabitsRoute: typeof HomeHabitsRoute
  HomeLearningRoute: typeof HomeLearningRoute
  HomeMotivationRoute: typeof HomeMotivationRoute
  HomeObjetivesRoute: typeof HomeObjetivesRoute
  HomeTimerRoute: typeof HomeTimerRoute
  HomeIndexRoute: typeof HomeIndexRoute
}

const HomeRouteRouteChildren: HomeRouteRouteChildren = {
  HomeCalendarRoute: HomeCalendarRoute,
  HomeClassroomRoute: HomeClassroomRoute,
  HomeGoalsRoute: HomeGoalsRoute,
  HomeHabitsRoute: HomeHabitsRoute,
  HomeLearningRoute: HomeLearningRoute,
  HomeMotivationRoute: HomeMotivationRoute,
  HomeObjetivesRoute: HomeObjetivesRoute,
  HomeTimerRoute: HomeTimerRoute,
  HomeIndexRoute: HomeIndexRoute,
}

const HomeRouteRouteWithChildren = HomeRouteRoute._addFileChildren(
  HomeRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeRouteRoute: HomeRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  OnboardingFinishRoute: OnboardingFinishRoute,
  OnboardingQuestionsRoute: OnboardingQuestionsRoute,
  OnboardingResultsRoute: OnboardingResultsRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
